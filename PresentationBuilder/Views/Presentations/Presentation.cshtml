@model PresentationBuilder.Models.Presentation

@{
    Layout = (Request.QueryString.Get("ajax") == null ? "~/Views/Shared/Layout.cshtml" : "~/Views/Shared/LayoutAjax.cshtml");

    ViewBag.Title = "Presentation";
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<style type="text/css">
    ul.thumbnails {
        overflow: auto;
        list-style-image: none;
        list-style-position: outside;
        list-style-type: none;
        padding: 0px;
        margin: 0px;
    }

        ul.thumbnails ul {
            overflow: auto;
            list-style-image: none;
            list-style-position: outside;
            list-style-type: none;
            padding: 0px;
            margin: 0px;
        }

        ul.thumbnails li.group_title {
            float: none;
        }

        ul.thumbnails id {
            margin: 0px 12px 12px 0px;
            float: left;
        }

        ul.thumbnails li .thumbnail {
            padding: 6px;
            border: 1px solid #dddddd;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
        }

            ul.thumbnails li .thumbnail img {
                -webkit-user-drag: none;
            }

            ul.thumbnails li .thumbnail.selected {
                background: #0088cc;
            }
</style>

@using (Html.BeginForm("AddPresentation", "Presentation", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form-group">

        <div class="col-md-12">
            <h2>Presentation Name</h2>
        </div>
        <div class="col-md-12">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
        <div class="col-md-12">
            <h2>Presentation Description</h2>
        </div>
        <div class="col-md-12">
            @Html.TextAreaFor(m => m.Description, new { @class = "ckeditor", @id = "sampleEditor" })
        </div>
    </div>

}





<div class="row">

    <ul id="sortable" class="thumbnails">
        @foreach (var presentation in @Model.PresentationPages.OrderBy(o => o.Order))
        {
            <id id="@(String.Format("presentationorder_{0}_{1}", presentation.PresentationPageId, presentation.Order))">
                <li>
                    <div class="thumbnail selected">
                        
                        <img src="~/image.ashx?Id=@presentation.PresentationPageId" alt="@presentation.ImagePath" style="cursor: move;" width="300" />
                       
                        <div class="buttons">
                            <div class="row">
                                <div class="col-sm-3">
                                    <a href="@Url.Action("Presentation", "Presentations", new { id = @presentation.PresentationId })" class="btn btn-sm">Edit</a>
                                </div>
                                <div class="col-sm-2">
                                    <button type="button" class="btn btn-sm" onclick="Presentations.download( @presentation.PresentationId); return false;">
                                        <img src="~/Images/download.png" height="17" />
                                    </button>
                                </div>
                                <div class="col-sm-2 col-sm-offset-1">
                                    <a href="@Url.Action("Duplicate", "Presentations", new { id = @presentation.PresentationId })" class="btn btn-sm">
                                        <img src="~/Images/duplicate.png" height="17" />
                                    </a>
                                </div>
                                <div class="col-sm-2 col-sm-offset-1">
                                    <button type="button" class="btn btn-sm btn-del" onclick="Presentations.delete( @presentation.PresentationId); return false;">
                                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
            </id>    
        }
    </ul>
</div>

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" class="btn btn-default" value="Submit" />
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('document').ready(function () {

            $("#sortable").sortable({
                revert: true,
                stop: function (evt, ui) {

                    var newOrder = 1;

                    $("id").each(function () {

                        var valueSplit = $(this).context.id.split("_");

                        if (valueSplit.length == 3) {
                            var idOrder = valueSplit[1];
                            ChangeOrder(idOrder, newOrder++);
                        }
                    });
                }
            });
        });


        function ChangeOrder(presentationPageIdValue, newOrderValue)
        {
            //var data = 'presentationPageId=' + presentationPageIdValue + '&newOrder=' + newOrderValue; // { presentationPageId: presentationPageIdValue, newOrder: newOrderValue };

            //var newbaseUrl + 'Presentations/ChangeOrder',

            var targeturl = '@Url.Action("ChangeOrder", "Presentations")?presentationPageId=' + presentationPageIdValue  + '&newOrder=' + newOrderValue;

            $.ajax({
                type: "POST",
                url: targeturl,
                contentType: false,
                processData: false,                
                success: function (result) {
                    //result = jQuery.parseJSON(result);

                    //if (result.uploadStatus === uploadStatus.success) {
                    //    //Presentations.fileUpload = Presentations.fileUpload.replaceWith(Presentations.fileUpload.val('').clone(true));

                    //    //Navigation.navigate('Presentations/Presentation/' + result.data.PresentationId, result.data.Name)
                    //}
                    //else {
                    //    alert('Erro: ' + result.message);
                    //}
                },
                error: function (xhr, status, p3, p4) {
                    var err = "Error " + " " + status + " " + p3 + " " + p4;
                    if (xhr.responseText && xhr.responseText[0] == "{")
                        err = JSON.parse(xhr.responseText).Message;
                    console.log(err);
                }
            });
        }

    </script>
}

